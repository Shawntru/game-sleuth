[{"/Users/mike/turing/3module/game-sleuth/src/index.tsx":"1","/Users/mike/turing/3module/game-sleuth/src/reportWebVitals.ts":"2","/Users/mike/turing/3module/game-sleuth/src/App/App.tsx":"3","/Users/mike/turing/3module/game-sleuth/src/SearchDisplay/SearchDisplay.tsx":"4","/Users/mike/turing/3module/game-sleuth/src/SoloGameView/SoloGameView.tsx":"5","/Users/mike/turing/3module/game-sleuth/src/MainPage/MainPage.tsx":"6","/Users/mike/turing/3module/game-sleuth/src/SearchForm/SearchForm.tsx":"7","/Users/mike/turing/3module/game-sleuth/src/APIcalls.tsx":"8","/Users/mike/turing/3module/game-sleuth/src/GamePreview/GamePreview.tsx":"9","/Users/mike/turing/3module/game-sleuth/src/Nav/Nav.tsx":"10"},{"size":552,"mtime":1609979529615,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1609799207078,"results":"13","hashOfConfig":"12"},{"size":1228,"mtime":1610303705567,"results":"14","hashOfConfig":"12"},{"size":2477,"mtime":1610153818100,"results":"15","hashOfConfig":"12"},{"size":4335,"mtime":1610229662021,"results":"16","hashOfConfig":"12"},{"size":994,"mtime":1610153818099,"results":"17","hashOfConfig":"12"},{"size":4137,"mtime":1610305912944,"results":"18","hashOfConfig":"12"},{"size":468,"mtime":1610229662020,"results":"19","hashOfConfig":"12"},{"size":711,"mtime":1610053527172,"results":"20","hashOfConfig":"12"},{"size":415,"mtime":1610305993223,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"kb82p",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mike/turing/3module/game-sleuth/src/index.tsx",[],["45","46"],"/Users/mike/turing/3module/game-sleuth/src/reportWebVitals.ts",[],"/Users/mike/turing/3module/game-sleuth/src/App/App.tsx",[],"/Users/mike/turing/3module/game-sleuth/src/SearchDisplay/SearchDisplay.tsx",["47"],"import React, { useState, useEffect } from \"react\";\nimport \"./SearchDisplay.scss\";\nimport { MyBoardGame, PreviewInfo } from \"../interfaces/MyBoardGame.interface\";\nimport { fetchSearchResults } from \"../APIcalls\";\nimport GamePreview from \"../GamePreview/GamePreview\";\nimport { useParams } from \"react-router-dom\";\n\nconst SearchDisplay = () => {\n  const [allGames, setAllGames] = useState([]);\n  let { criteria }: any = useParams();\n\n  useEffect(() => {\n    let searchCriteria = handleSearchCriteria();\n\n    fetchSearchResults(searchCriteria)\n      .then((data) => setAllGames(cleanData(data.games) as any))\n      .catch((error) => console.log(error));\n  }, []);\n\n  const handleSearchCriteria = () => {\n    switch (criteria) {\n      case \"trending\":\n        return \"order_by=reddit_week_count&limit=10\";\n      case \"top-10\":\n        return \"order_by=rank&limit=10\";\n      case \"max_players=2\":\n        return \"max_players=2\";\n      case \"max_players=4\":\n        return \"max_players=4\";\n      default:\n        return criteria;\n    }\n  };\n\n  const cleanData = (data: MyBoardGame[]) => {\n    if (!data) return;\n    let cleanedData = data.map((game: MyBoardGame) => {\n      return {\n        id: game.id,\n        name: game.name,\n        min_players: game.min_players,\n        max_players: game.max_players,\n        min_age: game.min_age,\n        image_url: game.image_url,\n        description: game.description,\n        price: game.price,\n        url: game.url,\n        primary_publisher: game.primary_publisher,\n        mechanics: game.mechanics,\n        average_user_rating: game.average_user_rating,\n        num_user_ratings: game.num_user_ratings,\n        rank: game.rank,\n        trending_rank: game.trending_rank,\n        rules_url: game.rules_url,\n      };\n    });\n    return cleanedData;\n  };\n\n  const createGamePreview = (game: PreviewInfo) => {\n    return (\n      <GamePreview\n        id={game.id}\n        key={game.id}\n        name={game.name}\n        image_url={game.image_url}\n        rank={game.rank}\n        min_players={game.min_players}\n        max_players={game.max_players}\n      />\n    );\n  };\n\n  return (\n    <section className=\"displayed-games-section\">\n      <h1>Search Results</h1>\n      {allGames.length === 0 && <h3>Loading...</h3>}\n      {allGames.length > 0 && (\n        <div className=\"search-results\">\n          {allGames.map((game: MyBoardGame) => createGamePreview(game))}\n        </div>\n      )}\n    </section>\n  );\n};\n\nexport default SearchDisplay;\n","/Users/mike/turing/3module/game-sleuth/src/SoloGameView/SoloGameView.tsx",["48"],"import './SoloGameView.scss';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as API from '../APIcalls';\nimport { MyBoardGame } from '../interfaces/MyBoardGame.interface';\nimport magGlass from '../assets/mag-hand-right.png';\n\n// interface MechanicsType {\n//   mechanics: [];\n// }\n\n// interface Details {\n//   id: string;\n//   name: string;\n//   url: string;\n// }\n\nexport const SoloGameView = () => {\n  const [soloGame, setSoloGame] = useState<MyBoardGame | null>(null);\n  const [soloMechanics, setSoloMechanics] = useState<any>({});\n  const [soloCategories, setSoloCategories] = useState<any>({});\n  const [error, setError] = useState<object | null>(null);\n  const location: { id: string } = useParams();\n\n  //TODO: Change soloMechanics and soloCatagories to use valid types\n\n  // useEffect functions cannot be broken out into individual functions\n  // or will cause continual call of useEffect\n\n  useEffect(() => {\n    if (soloGame) return;\n\n    API.fetchSearchResults(`ids=${location.id}`)\n      .then((data) => {\n        setSoloGame(data.games[0]);\n      })\n      .catch((error) => {\n        setError(error);\n      });\n\n    let subDetails = ['categories', 'mechanics'];\n    subDetails.forEach((detail) => {\n      API.fetchSoloGameDetails(detail)\n        .then((data) => {\n          switch (detail) {\n            case 'categories':\n              setSoloCategories(data);\n              break;\n            case 'mechanics':\n              setSoloMechanics(data);\n              break;\n          }\n        })\n        .catch((error) => {\n          setError(error);\n        });\n    });\n  }, [location, soloGame]);\n\n  // TODO: Reformat math id functions into one\n\n  const matchMechanicFromId = (mechanic: { id: string }) => {\n    return soloMechanics.mechanics.find(\n      (listMech: { id: string }) => listMech.id === mechanic.id\n    ).name;\n  };\n\n  const matchCategoryFromId = (category: { id: string }) => {\n    return soloCategories.categories.find(\n      (listCat: { id: string }) => listCat.id === category.id\n    ).name;\n  };\n\n  if (!soloGame) {\n    return <h3 className=\"loading-text\">...Sleuthing Details...</h3>;\n  } else {\n    return (\n      <section>\n        {error && <h1>Unexpected Error Occured: {error}</h1>}\n        <div className=\"style-diamond\"></div>\n        <div className=\"solo-game-overview\">\n          <div className=\"solo-image-wrapper\">\n            <img\n              className=\"solo-game-image\"\n              src={soloGame.image_url}\n              alt={soloGame.name}\n            />\n          </div>\n          <div className=\"solo-game-details\">\n            <h2 className=\"solo-game-title\">{soloGame.name}</h2>\n            <h3>\n              {soloGame.min_players}-{soloGame.max_players} Players\n            </h3>\n            <p>Published by {soloGame.primary_publisher.name}</p>\n            <p>Sleuth Rank: {soloGame.rank} </p>\n            <p>\n              {soloGame.average_user_rating.toFixed(1)} / 5 (\n              {soloGame.num_user_ratings} ratings)\n            </p>\n            {soloGame.trending_rank !== 0 && (\n              <p>Currently Trending at #{soloGame.trending_rank}</p>\n            )}\n            <p>Recommended Age: {soloGame.min_age}+</p>\n            <p>MSRP: ${soloGame.price}</p>\n          </div>\n        </div>\n        <div className=\"solo-sub-details\">\n          {soloMechanics && (\n            <div>\n              <i>\n                <b>Mechanics: </b>\n              </i>\n              {soloGame.mechanics\n                .map((mechanic) => matchMechanicFromId(mechanic))\n                .join(', ')}\n            </div>\n          )}\n          <br></br>\n          {soloCategories && (\n            <div>\n              <i>\n                <b>Categories: </b>\n              </i>\n              {soloGame.categories\n                .map((category) => matchCategoryFromId(category))\n                .join(', ')}\n            </div>\n          )}\n        </div>\n        <div\n          className=\"solo-game-description\"\n          dangerouslySetInnerHTML={{ __html: soloGame.description }}\n        />\n        <a className=\"info-link\" href={soloGame.url}>\n          See more at Board Game Atlas\n        </a>\n        <a className=\"info-link\" href={soloGame.rules_url}>\n          Show Me The Rules\n        </a>\n      </section>\n    );\n  }\n};\n","/Users/mike/turing/3module/game-sleuth/src/MainPage/MainPage.tsx",[],"/Users/mike/turing/3module/game-sleuth/src/SearchForm/SearchForm.tsx",["49"],"/Users/mike/turing/3module/game-sleuth/src/APIcalls.tsx",[],"/Users/mike/turing/3module/game-sleuth/src/GamePreview/GamePreview.tsx",[],"/Users/mike/turing/3module/game-sleuth/src/Nav/Nav.tsx",["50"],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":18,"column":6,"nodeType":"57","endLine":18,"endColumn":8,"suggestions":"58"},{"ruleId":"59","severity":1,"message":"60","line":6,"column":8,"nodeType":"61","messageId":"62","endLine":6,"endColumn":16},{"ruleId":"63","severity":1,"message":"64","line":116,"column":9,"nodeType":"65","endLine":116,"endColumn":44},{"ruleId":"66","severity":1,"message":"67","line":12,"column":11,"nodeType":"65","endLine":12,"endColumn":50},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleSearchCriteria'. Either include it or remove the dependency array.","ArrayExpression",["70"],"@typescript-eslint/no-unused-vars","'magGlass' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},"Update the dependencies array to be: [handleSearchCriteria]",{"range":"73","text":"74"},[656,658],"[handleSearchCriteria]"]