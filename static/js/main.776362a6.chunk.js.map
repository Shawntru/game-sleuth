{"version":3,"sources":["APIcalls.tsx","GamePreview/GamePreview.tsx","assets/mag-hand.png","SearchDisplay/SearchDisplay.tsx","SearchForm/SearchForm.tsx","MainPage/MainPage.tsx","SoloGameView/SoloGameView.tsx","assets/sleuth.png","Nav/Nav.tsx","App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["fetchSearchResults","searchCriteria","a","fetch","response","json","fetchSoloGameDetails","subDetail","GamePreview","id","name","min_players","max_players","image_url","rank","to","className","src","alt","SearchDisplay","useState","allGames","setAllGames","noResults","setNoResults","criteria","useParams","useEffect","handleSearchCriteria","then","data","games","length","cleanData","catch","error","console","log","map","game","min_age","description","price","url","primary_publisher","mechanics","average_user_rating","num_user_ratings","trending_rank","rules_url","magHand","createGamePreview","SearchForm","numPlayers","setNumPlayers","playtime","setPlaytime","setPrice","searchName","setSearchName","redirector","setRedirector","searchString","setSearchString","handleSubmit","event","preventDefault","playerSearch","playtimeSearch","priceSearch","search","type","value","onChange","target","onKeyPress","key","placeholder","Typography","component","gutterBottom","Slider","min","max","newValue","valueLabelDisplay","getAriaLabel","data-testid","href","onClick","MainPage","data-value","SoloGameView","soloGame","setSoloGame","soloMechanics","setSoloMechanics","soloCategories","setSoloCategories","setError","location","mounted","API","forEach","detail","toFixed","mechanic","find","listMech","matchMechanicFromId","join","categories","category","listCat","matchCategoryFromId","dangerouslySetInnerHTML","__html","Nav","sleuth","App","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.776362a6.chunk.js","sourcesContent":["export const fetchSearchResults = async (searchCriteria?: string) => {\n  const response = await fetch(\n    `https://api.boardgameatlas.com/api/search?${searchCriteria}&fuzzy_match=true&client_id=U4cPDqoedb`\n  );\n  return await response.json();\n};\n\nexport const fetchSoloGameDetails = async (subDetail?: string) => {\n  const response = await fetch(\n    `https://api.boardgameatlas.com/api/game/${subDetail}?client_id=U4cPDqoedb`\n  );\n  return await response.json();\n};\n","import './GamePreview.scss';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { PreviewInfo } from '../interfaces/MyBoardGame.interface';\n\nconst GamePreview = ({\n  id,\n  name,\n  min_players,\n  max_players,\n  image_url,\n  rank,\n}: PreviewInfo) => {\n  return (\n    <Link to={`/game/${id}`} className=\"preview-link\">\n      <section className=\"game-preview\">\n        <img className=\"game-image\" src={image_url} alt={name} />\n        <div className=\"preview-info\">\n          <h3 className=\"game-title\">{name}</h3>\n          <p>\n            {min_players}-{max_players} Players\n          </p>\n          {rank <= 10000 && <p>Sleuth Ranking: {rank}</p>}\n        </div>\n      </section>\n    </Link>\n  );\n};\n\nexport default GamePreview;\n","export default __webpack_public_path__ + \"static/media/mag-hand.16eacb00.png\";","import React, { useState, useEffect } from 'react';\nimport './SearchDisplay.scss';\nimport { MyBoardGame, PreviewInfo } from '../interfaces/MyBoardGame.interface';\nimport { fetchSearchResults } from '../APIcalls';\nimport GamePreview from '../GamePreview/GamePreview';\nimport { useParams } from 'react-router-dom';\nimport magHand from '../assets/mag-hand.png';\n\nconst SearchDisplay = () => {\n  const [allGames, setAllGames] = useState([]);\n  const [noResults, setNoResults] = useState<boolean>(false);\n  let { criteria }: any = useParams();\n\n  useEffect(() => {\n    let searchCriteria = handleSearchCriteria();\n\n    fetchSearchResults(searchCriteria)\n      .then((data) => {\n        if (data.games.length > 0) {\n          setAllGames(cleanData(data.games) as any);\n        } else {\n          setNoResults(true);\n        }\n      })\n      .catch((error) => console.log(error));\n  }, []);\n\n  const handleSearchCriteria = () => {\n    switch (criteria) {\n      case 'trending':\n        return 'order_by=reddit_week_count&limit=10';\n      case 'top-10':\n        return 'order_by=rank&limit=10';\n      case 'max_players=2':\n        return 'max_players=2';\n      case 'max_players=4':\n        return 'max_players=4';\n      default:\n        return criteria;\n    }\n  };\n\n  const cleanData = (data: MyBoardGame[]) => {\n    if (!data) return;\n    let cleanedData = data.map((game: MyBoardGame) => {\n      return {\n        id: game.id,\n        name: game.name,\n        min_players: game.min_players,\n        max_players: game.max_players,\n        min_age: game.min_age,\n        image_url: game.image_url,\n        description: game.description,\n        price: game.price,\n        url: game.url,\n        primary_publisher: game.primary_publisher,\n        mechanics: game.mechanics,\n        average_user_rating: game.average_user_rating,\n        num_user_ratings: game.num_user_ratings,\n        rank: game.rank,\n        trending_rank: game.trending_rank,\n        rules_url: game.rules_url,\n      };\n    });\n    return cleanedData;\n  };\n\n  const createGamePreview = (game: PreviewInfo) => {\n    return (\n      <GamePreview\n        id={game.id}\n        key={game.id}\n        name={game.name}\n        image_url={game.image_url}\n        rank={game.rank}\n        min_players={game.min_players}\n        max_players={game.max_players}\n      />\n    );\n  };\n\n  const handleLoadingScreen = () => {\n    return noResults ? (\n      <h3 className=\"status-font\">\n        No search results\n        <br />\n        Try again!\n      </h3>\n    ) : (\n      <section>\n        <h3 className=\"status-font\">...Sleuthing Games...</h3>\n        <img className=\"mag-hand-search\" alt=\"Magnifier Hand\" src={magHand} />\n      </section>\n    );\n  };\n\n  return (\n    <section className=\"displayed-games-section\">\n      {allGames.length === 0 && handleLoadingScreen()}\n      {allGames.length > 0 && (\n        <section>\n          <h2 className=\"search-title\">\n            Search Results{' '}\n            <span className=\"matches-num\">({allGames.length} matches)</span>\n          </h2>\n\n          <div className=\"search-results\">\n            {allGames.map((game: MyBoardGame) => createGamePreview(game))}\n          </div>\n          <img className=\"mag-hand-static\" alt=\"Magnifier Hand\" src={magHand} />\n        </section>\n      )}\n    </section>\n  );\n};\n\nexport default SearchDisplay;\n","import React, { useState } from 'react';\nimport './SearchForm.scss';\nimport { Slider, Typography } from '@material-ui/core';\nimport { Redirect } from 'react-router-dom';\nimport magHand from '../assets/mag-hand.png';\n\nconst SearchForm: React.FC = () => {\n  const [numPlayers, setNumPlayers] = useState<number[]>([1, 5]);\n  const [playtime, setPlaytime] = useState<number[]>([10, 90]);\n  const [price, setPrice] = useState<number[]>([10, 50]);\n  const [searchName, setSearchName] = useState<string>('');\n  const [redirector, setRedirector] = useState<boolean>(false);\n  const [searchString, setSearchString] = useState<string>('');\n\n  const handleSubmit = (event: any) => {\n    event.preventDefault();\n\n    const playerSearch = `gt_min_players=${numPlayers[0] - 1}&lt_max_players=${\n      numPlayers[1] + 1\n    }`;\n    const playtimeSearch = `&gt_min_playtime=${playtime[0]}&lt_max_playtime=${playtime[1]}`;\n    const priceSearch = `&lt_price=${price[0]}&gt_price${price[1]}`;\n    const search = !searchName\n      ? playerSearch + playtimeSearch + priceSearch\n      : `name=${searchName}`;\n    setSearchString(search);\n    setRedirector(true);\n  };\n\n  const handlePlayersChange = (event: any, newValue: any) => {\n    setNumPlayers(newValue);\n  };\n  const handlePlaytimeChange = (event: any, newValue: any) => {\n    setPlaytime(newValue);\n  };\n  const handlePriceChange = (event: any, newValue: any) => {\n    setPrice(newValue);\n  };\n\n  const handleSearchByName = (event: any) => {\n    setSearchName(event.target.value);\n  };\n\n  if (redirector) {\n    return <Redirect to={`/${searchString}`} />;\n  }\n\n  return (\n    <section>\n      <div className=\"search-box\">\n        <h2>Search for a game!</h2>\n        <form>\n          <div className=\"user-box\">\n            <input\n              id=\"search-input\"\n              type=\"text\"\n              name=\"searchName\"\n              value={searchName}\n              onChange={handleSearchByName}\n              onKeyPress={(event) => {\n                if (event.key === 'Enter') {\n                  handleSubmit(event);\n                }\n              }}\n              placeholder=\"Search by name\"\n            />\n          </div>\n          <div className=\"user-box\">\n            <Typography component={'span'} id=\"range-slider\" gutterBottom>\n              <h3 className=\"search-criteria-font\">Number of Players</h3>\n            </Typography>\n            <div className=\"values-display\">\n              <span className=\"value\">{numPlayers[0]}</span>\n              <span className=\"value\">{numPlayers[1]}</span>\n            </div>\n            <Slider\n              className=\"slider\"\n              min={1}\n              max={8}\n              value={numPlayers}\n              onChange={handlePlayersChange}\n              valueLabelDisplay=\"auto\"\n              getAriaLabel={() => 'aria-slider'}\n              data-testid=\"numPlayer-slider\"\n            />\n          </div>\n          <div className=\"user-box\">\n            <Typography component={'span'} id=\"range-slider\" gutterBottom>\n              <h3 className=\"search-criteria-font\">Playtime (minutes)</h3>\n            </Typography>\n            <div className=\"values-display\">\n              <span className=\"value\">{playtime[0]}</span>\n              <span className=\"value\">{playtime[1]}</span>\n            </div>\n            <Slider\n              className=\"slider\"\n              min={0}\n              max={240}\n              value={playtime}\n              onChange={handlePlaytimeChange}\n              valueLabelDisplay=\"auto\"\n              getAriaLabel={() => 'aria-slider'}\n              data-testid=\"playtime-slider\"\n            />\n          </div>\n          <div className=\"user-box\">\n            <Typography component={'span'} id=\"range-slider\" gutterBottom>\n              <h3 className=\"search-criteria-font\">Price</h3>\n            </Typography>\n            <div className=\"values-display\">\n              <span className=\"value\">{'$ ' + price[0]}</span>\n              <span className=\"value\">{'$ ' + price[1]}</span>\n            </div>\n            <Slider\n              className=\"slider\"\n              min={5}\n              max={100}\n              value={price}\n              onChange={handlePriceChange}\n              valueLabelDisplay=\"auto\"\n              getAriaLabel={() => 'aria-slider'}\n              data-testid=\"price-slider\"\n            />\n          </div>\n          <a href=\"#\" onClick={handleSubmit}>\n            <span></span>\n            <span></span>\n            <span></span>\n            <span></span>\n            Submit\n          </a>\n        </form>\n      </div>\n      <img\n        className=\"mag-hand-search-form\"\n        alt=\"Magnifier Hand\"\n        src={magHand}\n      />\n    </section>\n  );\n};\n\nexport default SearchForm;\n","import React from 'react';\nimport './MainPage.scss';\nimport { Link } from 'react-router-dom';\nimport magHand from '../assets/mag-hand.png';\n\nconst MainPage: React.FC = () => {\n  return (\n    <main className=\"container\">\n      <ul className=\"list-wrapper\">\n        <Link className=\"remove-link\" to=\"/form\">\n          <li className=\"search-form\">\n            <h3 className=\"title\">Sleuth for Games</h3>\n          </li>\n        </Link>\n\n        <Link className=\"remove-link\" to=\"/trending\">\n          <li className=\"search-trending\" data-value=\"trending\">\n            <h3 className=\"title\">Trending Games</h3>\n          </li>\n        </Link>\n\n        <Link className=\"remove-link\" to=\"/top\">\n          <li className=\"search-top\" data-value=\"top-10\">\n            <h3 className=\"title\">The Top 100</h3>\n          </li>\n        </Link>\n\n        <Link className=\"remove-link\" to=\"/max_player=2\">\n          <li className=\"search-two-player\" data-value=\"max_players=2\">\n            <h3 className=\"title\">2 Player Games</h3>\n          </li>\n        </Link>\n\n        <Link className=\"remove-link\" to=\"/max_players=4\">\n          <li className=\"search-four-player\" data-value=\"max_player=4\">\n            <h3 className=\"title\">4 Player Games</h3>\n          </li>\n        </Link>\n      </ul>\n      <img className=\"mag-hand-home\" alt=\"Magnifier Hand\" src={magHand} />\n    </main>\n  );\n};\n\nexport default MainPage;\n","import './SoloGameView.scss';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as API from '../APIcalls';\nimport { MyBoardGame } from '../interfaces/MyBoardGame.interface';\n\nexport const SoloGameView = () => {\n  const [soloGame, setSoloGame] = useState<MyBoardGame | null>(null);\n  const [soloMechanics, setSoloMechanics] = useState<any>({});\n  const [soloCategories, setSoloCategories] = useState<any>({});\n  const [error, setError] = useState<object | null>(null);\n  const location: { id: string } = useParams();\n\n  useEffect(() => {\n    if (soloGame) return;\n    let mounted = true;\n\n    API.fetchSearchResults(`ids=${location.id}`)\n      .then((data) => {\n        if (mounted) {\n          setSoloGame(data.games[0]);\n        }\n      })\n      .catch((error) => {\n        if (mounted) {\n          setError(error);\n        }\n      });\n\n    let subDetails = ['categories', 'mechanics'];\n    subDetails.forEach((detail) => {\n      API.fetchSoloGameDetails(detail)\n        .then((data) => {\n          if (mounted) {\n            switch (detail) {\n              case 'categories':\n                setSoloCategories(data);\n                break;\n              case 'mechanics':\n                setSoloMechanics(data);\n                break;\n            }\n          }\n        })\n        .catch((error) => {\n          if (mounted) {\n            setError(error);\n          }\n        });\n    });\n\n    return function cleanup() {\n      mounted = false;\n    }\n  }, [soloGame, location.id]);\n\n  const matchMechanicFromId = (mechanic: { id: string }) => {\n    return soloMechanics.mechanics.find(\n      (listMech: { id: string }) => listMech.id === mechanic.id\n    ).name;\n  };\n\n  const matchCategoryFromId = (category: { id: string }) => {\n    return soloCategories.categories.find(\n      (listCat: { id: string }) => listCat.id === category.id\n    ).name;\n  };\n\n  if (!soloGame) {\n    return <h3 className=\"solo-loading-text\">...Sleuthing Details...</h3>;\n  } else {\n    return (\n      <section className=\"solo-view-wrapper\" data-testid=\"solo-view-test\">\n        <div className=\"view-backdrop\">\n          {error && <h1>Unexpected Error Occured: {error}</h1>}\n          <div className=\"solo-game-overview\">\n            <div className=\"solo-image-wrapper\">\n              <img\n                className=\"solo-game-image\"\n                src={soloGame.image_url}\n                alt={soloGame.name}\n              />\n            </div>\n            <div className=\"solo-game-details\">\n              <h1 className=\"solo-game-title\">{soloGame.name}</h1>\n              <h3>\n                {soloGame.min_players}-{soloGame.max_players} Players\n              </h3>\n              <p>Published by {soloGame.primary_publisher.name}</p>\n              <p>Sleuth Rank: {soloGame.rank} </p>\n              <p>\n                {soloGame.average_user_rating.toFixed(1)} / 5 (\n                {soloGame.num_user_ratings} ratings)\n              </p>\n              {soloGame.trending_rank !== 0 && (\n                <p>Currently Trending at #{soloGame.trending_rank}</p>\n              )}\n              <p>Recommended Age: {soloGame.min_age}+</p>\n              <p>MSRP: ${soloGame.price}</p>\n            </div>\n          </div>\n          <div className=\"solo-sub-details\">\n            {soloMechanics.mechanics && (\n              <div>\n                <i>\n                  <b>Mechanics: </b>\n                </i>\n                {soloGame.mechanics\n                  .map((mechanic) => matchMechanicFromId(mechanic))\n                  .join(', ')}\n              </div>\n            )}\n            <br></br>\n            {soloCategories.categories && (\n              <div>\n                <i>\n                  <b>Categories: </b>\n                </i>\n                {soloGame.categories\n                  .map((category) => matchCategoryFromId(category))\n                  .join(', ')}\n              </div>\n            )}\n          </div>\n          <div className=\"solo-description-wrapper\">\n            <div className=\"solo-desc-background\">\n              <h3 className=\"solo-game-description\">\n                {soloGame.name} at a glance:\n              </h3>\n              <div\n                className=\"solo-game-description\"\n                dangerouslySetInnerHTML={{ __html: soloGame.description }}\n              />\n            </div>\n            <div className=\"links-section\">\n              <h4 className=\"info-link\">Sleuth Links: </h4>\n              <a className=\"info-link\" href={soloGame.url}>\n                See more at Board Game Atlas\n              </a>\n              {soloGame.rules_url && (\n                <a className=\"info-link\" href={soloGame.rules_url}>\n                  Show Me The Rules\n                </a>\n              )}\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n};\n","export default __webpack_public_path__ + \"static/media/sleuth.47043243.png\";","import React from 'react';\nimport './Nav.scss';\nimport sleuth from '../assets/sleuth.png';\nimport { Link } from 'react-router-dom';\n\nconst Nav: React.FC = () => {\n  return (\n    <nav className=\"nav-styling\">\n      <Link className=\"sleuth-link\" to={'/'}>\n        <div className=\"sleuth-div\">\n          <h2>Game</h2>\n          <img className=\"sleuth-img\" src={sleuth} alt=\"sleuth logo\" />\n          <h2>Sleuth</h2>\n        </div>\n      </Link>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport \"./App.scss\";\nimport SearchDisplay from \"../SearchDisplay/SearchDisplay\";\nimport SearchForm from \"../SearchForm/SearchForm\";\nimport MainPage from \"../MainPage/MainPage\";\nimport { Route, Switch, Link } from \"react-router-dom\";\nimport { SoloGameView } from \"../SoloGameView/SoloGameView\";\nimport Nav from '../Nav/Nav';\n\nconst App: React.FC = () => {\n  return (\n    <>\n    <Nav />\n    <main className=\"App\">\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={() => {\n            return <MainPage />;\n          }}\n        />\n        <Route\n          exact\n          path=\"/game-sleuth\"\n          render={() => {\n            return <MainPage />;\n          }}\n        />\n        <Route\n          exact\n          path=\"/form\"\n          render={() => {\n            return <SearchForm />;\n          }}\n        />\n        <Route exact path=\"/:criteria\" component={SearchDisplay} />\n        <Route\n          exact\n          path=\"/game/:id\"\n          render={() => {\n            return <SoloGameView />;\n          }}\n        />\n        <Route render={() => {\n          return(\n            <section>\n            <h2>This page does not exist</h2>\n            <Link to=\"/\"><button>Return Home</button></Link>\n            </section>\n          )\n        }} />\n      </Switch>\n    </main>\n  </>\n );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}